{
    "compilerOptions": {
        /* Basic Options */
        "allowJs": false,                /* Allow JS files within project */
        "esModuleInterop": true,        /* Emit additional JS to ease support of importing CommonJS into ESModules. Automatically sets `allowSyntheticDefaultImports` to `true`. */
        "isolatedModules": true,        /* Ensure that each file can be safely transpiled without relying on other imports */
        "moduleDetection": "force",     /* Specifies how TypeScript determines a file is a module */
        "resolveJsonModule": true,      /* Enable importing .json files */
        "skipLibCheck": true,           /* Skips checking of the types of `.d.ts` files. Important for performance, b/c otherwise all `node_modules` will be checked */
        "target": "es2024",             /* The version of ECMAScript (JS) you are targeting; Using 'es2024' over 'esnext' for explicitness & stability. */
        "verbatimModuleSyntax": true,   /* Do not transform or elide any imports or exports unless marked as type-only; this ensures they are written in the output file's format based on the 'module' setting */

        /* Build Options */
        "declaration": true,                /* Generate .d.ts files; necessarso that consumers can get autocomplete on created `.js` files */
        /* Strictness */
        "noImplicitOverride": true,             /* Ensures overriding members in derived classes are marked with an `override` modifier. */
        "noUncheckedIndexedAccess": true,       /* Prevent access to an array/object without first checking if it's defined. */
        "noUncheckedSideEffectImports": true,   /* Check side effect imports */
        "noUnusedLocals": true,                 /* Ensure all local variables are used */
        "noUnusedParameters": true,             /* Ensure function parameters are utilized */
        "strict": true,                         /* Enables all strict type checking options. */
    }
}